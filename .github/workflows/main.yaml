name: Push (main)

on:
  push:
    branches:
      - main
    paths:
      - "snap/snapcraft.yaml"
      - ".github/workflows/**.yaml"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      snap: ${{ steps.snapcraft.outputs.snap }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build snap locally
        uses: snapcore/action-build@v1
        id: snapcraft

      - name: Upload locally built snap artifact
        uses: actions/upload-artifact@v3
        with:
          name: local-${{ steps.snapcraft.outputs.snap }}
          path: ${{ steps.snapcraft.outputs.snap }}

      - name: Install snap & invoke terraform
        run: |
          sudo snap install --dangerous --classic ${{ steps.snapcraft.outputs.snap }}
          terraform --version

      - name: Setup MicroK8s
        uses: balchua/microk8s-actions@v0.2.1
        with:
          channel: latest/stable

      - name: Test snap - kubernetes provider
        run: |
          cd test
          terraform init
          terraform apply -auto-approve
          kubectl get ns snaptest

  # Uncomment when the snap confinement/plugs are configured
  publish:
    # Prevent this job from running concurrently so we don't spam launchpad
    concurrency: lp-remote-build
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install snapcraft
        run: sudo snap install snapcraft --classic

      - name: Remote build the snap
        env:
          LP_BUILD_SECRET: ${{ secrets.LP_BUILD_SECRET }}
        run: |
          # Get the current version of the snap
          VERSION="$(grep -Po "^version: \"\K[0-9]+\.[0-9]+\.[0-9]+" snap/snapcraft.yaml)"

          # Setup Launchpad credentials
          mkdir -p ~/.local/share/snapcraft/provider/launchpad
          echo "$LP_BUILD_SECRET" > ~/.local/share/snapcraft/provider/launchpad/credentials

          git config --global user.email "github-actions@github.com"
          git config --global user.name "Github Actions"

          # Remote build the snap
          snapcraft remote-build --launchpad-accept-public-upload

      - name: Upload remote build snap artifacts and build logs
        uses: actions/upload-artifact@v3
        with:
          name: remote-build-snaps
          path: |
            **/*.snap
            **/*.txt

      - name: Upload and release (edge, candidate)
        env:
          STORE_LOGIN: ${{ secrets.STORE_LOGIN }}
        run: |
          # Login to snapcraft using saved credentials
          echo "$STORE_LOGIN" > credentials.txt
          snapcraft login --with credentials.txt

          # Upload the snaps and release to edge, candidate
          # TODO(jsngruk): Remove the `|| true` once uploads are approved 
          snapcraft upload --release edge,candidate "terraform_$VERSION_amd64.snap" || true
          snapcraft upload --release edge,candidate "terraform_$VERSION_arm64.snap" || true
          snapcraft upload --release edge,candidate "terraform_$VERSION_armhf.snap" || true
